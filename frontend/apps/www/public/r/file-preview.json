{
  "name": "file-preview",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion@11"
  ],
  "files": [
    {
      "path": "ui/file-preview.tsx",
      "content": "\"use client\"\n\nimport React, { useEffect } from \"react\"\nimport { motion } from \"framer-motion\"\nimport { FileIcon, X } from \"lucide-react\"\n\ninterface FilePreviewProps {\n  file: File\n  onRemove?: () => void\n}\n\nexport const FilePreview = React.forwardRef<HTMLDivElement, FilePreviewProps>(\n  (props, ref) => {\n    if (props.file.type.startsWith(\"image/\")) {\n      return <ImageFilePreview {...props} ref={ref} />\n    }\n\n    if (\n      props.file.type.startsWith(\"text/\") ||\n      props.file.name.endsWith(\".txt\") ||\n      props.file.name.endsWith(\".md\")\n    ) {\n      return <TextFilePreview {...props} ref={ref} />\n    }\n\n    return <GenericFilePreview {...props} ref={ref} />\n  }\n)\nFilePreview.displayName = \"FilePreview\"\n\nconst ImageFilePreview = React.forwardRef<HTMLDivElement, FilePreviewProps>(\n  ({ file, onRemove }, ref) => {\n    return (\n      <motion.div\n        ref={ref}\n        className=\"relative flex max-w-[200px] rounded-md border p-1.5 pr-2 text-xs\"\n        layout\n        initial={{ opacity: 0, y: \"100%\" }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: \"100%\" }}\n      >\n        <div className=\"flex w-full items-center space-x-2\">\n          {/* eslint-disable-next-line @next/next/no-img-element */}\n          <img\n            alt={`Attachment ${file.name}`}\n            className=\"grid h-10 w-10 shrink-0 place-items-center rounded-sm border bg-muted object-cover\"\n            src={URL.createObjectURL(file)}\n          />\n          <span className=\"w-full truncate text-muted-foreground\">\n            {file.name}\n          </span>\n        </div>\n\n        {onRemove ? (\n          <button\n            className=\"absolute -right-2 -top-2 flex h-4 w-4 items-center justify-center rounded-full border bg-background\"\n            type=\"button\"\n            onClick={onRemove}\n            aria-label=\"Remove attachment\"\n          >\n            <X className=\"h-2.5 w-2.5\" />\n          </button>\n        ) : null}\n      </motion.div>\n    )\n  }\n)\nImageFilePreview.displayName = \"ImageFilePreview\"\n\nconst TextFilePreview = React.forwardRef<HTMLDivElement, FilePreviewProps>(\n  ({ file, onRemove }, ref) => {\n    const [preview, setPreview] = React.useState<string>(\"\")\n\n    useEffect(() => {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        const text = e.target?.result as string\n        setPreview(text.slice(0, 50) + (text.length > 50 ? \"...\" : \"\"))\n      }\n      reader.readAsText(file)\n    }, [file])\n\n    return (\n      <motion.div\n        ref={ref}\n        className=\"relative flex max-w-[200px] rounded-md border p-1.5 pr-2 text-xs\"\n        layout\n        initial={{ opacity: 0, y: \"100%\" }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: \"100%\" }}\n      >\n        <div className=\"flex w-full items-center space-x-2\">\n          <div className=\"grid h-10 w-10 shrink-0 place-items-center rounded-sm border bg-muted p-0.5\">\n            <div className=\"h-full w-full overflow-hidden text-[6px] leading-none text-muted-foreground\">\n              {preview || \"Loading...\"}\n            </div>\n          </div>\n          <span className=\"w-full truncate text-muted-foreground\">\n            {file.name}\n          </span>\n        </div>\n\n        {onRemove ? (\n          <button\n            className=\"absolute -right-2 -top-2 flex h-4 w-4 items-center justify-center rounded-full border bg-background\"\n            type=\"button\"\n            onClick={onRemove}\n            aria-label=\"Remove attachment\"\n          >\n            <X className=\"h-2.5 w-2.5\" />\n          </button>\n        ) : null}\n      </motion.div>\n    )\n  }\n)\nTextFilePreview.displayName = \"TextFilePreview\"\n\nconst GenericFilePreview = React.forwardRef<HTMLDivElement, FilePreviewProps>(\n  ({ file, onRemove }, ref) => {\n    return (\n      <motion.div\n        ref={ref}\n        className=\"relative flex max-w-[200px] rounded-md border p-1.5 pr-2 text-xs\"\n        layout\n        initial={{ opacity: 0, y: \"100%\" }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: \"100%\" }}\n      >\n        <div className=\"flex w-full items-center space-x-2\">\n          <div className=\"grid h-10 w-10 shrink-0 place-items-center rounded-sm border bg-muted\">\n            <FileIcon className=\"h-6 w-6 text-foreground\" />\n          </div>\n          <span className=\"w-full truncate text-muted-foreground\">\n            {file.name}\n          </span>\n        </div>\n\n        {onRemove ? (\n          <button\n            className=\"absolute -right-2 -top-2 flex h-4 w-4 items-center justify-center rounded-full border bg-background\"\n            type=\"button\"\n            onClick={onRemove}\n            aria-label=\"Remove attachment\"\n          >\n            <X className=\"h-2.5 w-2.5\" />\n          </button>\n        ) : null}\n      </motion.div>\n    )\n  }\n)\nGenericFilePreview.displayName = \"GenericFilePreview\"\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}